# -*- coding: utf-8 -*-
"""The DigiShelf.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1N-ocJ6Hmug94aafvkpFc7rh52AfRKnxb
"""

import time
import random
import csv
from tabulate import tabulate

class Book():
  def __init__(self, name = "", author = "", category = "", length = 0, language = "", state = 'Unread', rating = 0, date = 'Not Read Yet!'):
    self.name = name
    self.author = author
    self.category = category
    self.length = length
    self.language = language
    self.state = state
    self.rating = rating
    self.date = date

  def book_search(self):
    theNumber = int(input('''
How do you want to search the book?

You can:
Press 1 to search by the name of the book.
Press 2 to search by the name of the author.
Press 3 to search by the category. 
'''))
    if theNumber == 1:
      theName = input("Please enter the name of the book:  ").upper()
      with open("myDigitalBookshelf.txt") as f:
        lines = f.readlines()
      for i in range(0, len(lines)):
        bookInfo = lines[i].split(", ")
        if bookInfo[0] == theName:
          print('\nYes, the book is already on your list!')
          if bookInfo[5] == 'Read':
            print('And, you read it before! Congrats!')
            print('\nYou will be directed to the main menu.')
            return
          else:
            answer = int(input(
'''However, it is unread. Have you read it lately?

Please press 1 to update if you read the book,
    or press 0 to if it's still unread.'''))
            if answer == 1:
              bookInfo[5] = 'Read'
              bookInfo[6] = int(input("\nPlease rate the book between 1 and 10! "))
              if ((bookInfo[6] < 1) or (bookInfo[6] > 10)):
                raise Exception("Please enter an integer between 1 and 10!")
              bookInfo[7] = time.ctime(time.time())
              #print(lines[i])
              #print(bookInfo)
              bookInfo = ', '.join([str(each) for each in bookInfo])
              lines[i] = bookInfo + '\n'
              #print(lines[i])
              with open("myDigitalBookshelf.txt", "w") as f:
                f.seek(0)
                f.writelines(lines)
              print("\nGood job! The book has been updated as read and you will be directed to the main menu. ")
            else:
              print('\nHope you can find some time to read this great book! ')
            return
      print("\nIt's not in the list. You can go to the main menu to add the book to your list easily!\n")
      return

    if theNumber == 2:
      booksOfAuthor = []
      theName = input("Please enter the name of author:  ").upper()
      with open("myDigitalBookshelf.txt") as f:
        lines = f.readlines()
      for i in range(0, len(lines)):
        bookInfo = lines[i].split(", ")
        if bookInfo[1] == theName:
          booksOfAuthor.append(bookInfo)
      if booksOfAuthor:
        print('\nYes, you have added some books of {} to your list before!\n'.format(theName))
        print(tabulate(booksOfAuthor, headers = ['Book Name', 'Author', 'Category', 'Length', 'Language', 'State', 'Rating', 'Adding Date']))
      else:    
        print("\nThere is no book of {} on your list. You can go to the main menu to add a book from this author easily!".format(theName))
      print('\nYou will be directed to the main menu.')
      return

    if theNumber == 3:
      bookCategory = []
      theName = input("Please enter the category name:  ").upper()
      with open("myDigitalBookshelf.txt") as f:
        lines = f.readlines()
      for i in range(0, len(lines)):
        bookInfo = lines[i].split(", ")
        if bookInfo[2] == theName:
          bookCategory.append(bookInfo)
      if bookCategory:
        print('\nYes, you have added some books of the {} category to your list before!\n'.format(theName))
        print(tabulate(bookCategory, headers = ['Book Name', 'Author', 'Category', 'Length', 'Language', 'State', 'Rating', 'Adding Date']))
      else:    
        print("\nThere is no book of the {} category on your list. You can go to the main menu to add a new book easily!".format(theName))
      print('\nYou will be directed to the main menu.')
      return

    else:
      print("Invalid input, you will be directed to the main menu.")
      return

  def book_add(self):
    self.name = input("Name of the book: ").upper()
    with open("myDigitalBookshelf.txt") as f:
      lines = f.readlines()
      for i in range(0, len(lines)):
        bookInfo = lines[i].split(", ")
        if bookInfo[0] == self.name:
          print('This book is already on your list. You can not add it!\n')
          return
    self.author = input("Author: ").upper()
    self.category = input("Category: ").upper()
    self.length = int(input("Length: "))
    self.language = input("Language: ").upper()
    isRead = input("Have you read the book? Please enter 'yes' or 'no'! ").upper()
    if isRead == ('YES'):
      self.state = 'Read'
      self.rating = int(input("Please rate the book between 1 and 10! "))
      if ((self.rating < 1) or (self.rating > 10)):
        raise Exception("Please enter an integer between 1 and 10!")
      self.date = time.ctime(time.time())
    elif isRead == ('NO'):
      self.state = 'Unread'
      self.rating = 0
      self.date = 'Not Read Yet!'
    with open("myDigitalBookshelf.txt", "a+") as f:
      f.write("{}, {}, {}, {}, {}, {}, {}, {}\n".format(self.name, self.author, self.category, self.length, self.language, self.state, self.rating, self.date))
      print("The book has been saved.")
      print("-" * 40)

  def book_list(self):
    lines = []
    with open("myDigitalBookshelf.txt") as f:
      reader = csv.reader(f)
      for i in reader:
        lines.append(i)
    print("\n")
    print(tabulate(lines, headers = ['Book Name', 'Author', 'Category', 'Length', 'Language', 'State', 'Rating', 'Adding Date']))
    print('\nYou will be directed to the main menu.')

  def book_isRead(self):
    lines = []
    readBookCounter = 0
    with open("myDigitalBookshelf.txt") as f:
      lines = f.readlines()
      for i in range(0, len(lines)):
        bookInfo = lines[i].split(", ") 
        if bookInfo[5] == 'Read':
          readBookCounter += 1
      print('\nYou have read {} books so far out of the {} books from your list. Keep up the good work!'.format(readBookCounter, len(lines)))
          
  def book_suggest(self):
    lines = []
    unreadList = []
    with open("myDigitalBookshelf.txt") as f:
      lines = f.readlines()
      for i in range(0, len(lines)):
        bookInfo = lines[i].split(", ") 
        if bookInfo[5] == 'Unread':
          unreadList.append(i)
      randomNum = random.randint(0, len(unreadList)-1)
      #print(randomNum)
      #print(unreadList)
      theSuggestion = lines[unreadList[randomNum]]
      print('\nWe recommend you the book with all the details below. Hope you will like it! \n{}'.format(theSuggestion))
      print('You will be directed to the main menu.')  

book = Book()
print('Welcome to the DigiShelf Project!')

while True:
  print('*' * 40)
  print(
"""This is the main menu!

You can:
Press 1 to search a book.
Press 2 to add a book/books to your list.
Press 3 to see the whole list of books.
Press 4 to check the number of books you read so far.
Press 5 to get a random book suggestion from your 'To Read' List.

Press 0 to exit!
""")
  theInput = int(input("Please choose the process by pressing a number up to 5! "))
  if theInput == 0:
    print('\nHope to see you back! ')
    print('\n"Today a reader, tomorrow a leader!"')
    break
  elif theInput == 1:
    book.book_search()
  elif theInput == 2:
    numberOfBooks = int(input('\nHow many books do you want to add? '))
    for i in range (numberOfBooks):
      book.book_add()
  elif theInput == 3:
    book.book_list()
  elif theInput == 4:
    book.book_isRead()
  elif theInput == 5:
    book.book_suggest()
  else:
    print("Invalid input, please try again!")